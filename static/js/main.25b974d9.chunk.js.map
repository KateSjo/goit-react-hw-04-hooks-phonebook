{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmitFunction","contacts","useState","name","setName","number","setNumber","reset","onSubmit","e","preventDefault","contact","id","shortid","generate","forEach","element","includes","alert","className","styles","Form","Label","Input","onChange","currentTarget","value","type","pattern","title","required","Filter","FilterInput","ContactList","onDeleteContact","List","map","Span","ButtonDelete","onClick","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","state","normalizedFilter","toLowerCase","getVisibleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25b974d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1z0oC\"};","import { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactForm({ onSubmitFunction, contacts }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const onInputNumberChange = (e) => setNumber(e.currentTarget.value);\r\n  const onInputNameChange = (e) => setName(e.currentTarget.value);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    contacts.forEach((element) => {\r\n      if (element.name.includes(contact.name)) {\r\n        contact.name = null;\r\n        return alert(\"contact is already in the directory\");\r\n      }\r\n    });\r\n    if (contact.name === null) {\r\n      reset();\r\n      return;\r\n    }\r\n    onSubmitFunction(contact);\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className={styles.Form}>\r\n      <label className={styles.Label}>\r\n        Name\r\n        <input\r\n          className={styles.Input}\r\n          onChange={onInputNameChange}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.Label}>\r\n        Number\r\n        <input\r\n          className={styles.Input}\r\n          onChange={onInputNumberChange}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button>Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmitFunction: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <input\r\n    className={styles.FilterInput}\r\n    type=\"text\"\r\n    value={value}\r\n    onChange={onChange}\r\n  />\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={styles.List}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        {name}\r\n        <span className={styles.Span}>{number}</span>\r\n        <button\r\n          className={styles.ButtonDelete}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styles from \"./App.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nfunction App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ]\n  );\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onFilterChange = (e) => setFilter(e.currentTarget.value);\n  const onFormSubmit = (contact) => {\n    setContacts((state) => [contact, ...state]);\n  };\n  const onDeleteButtonClick = (id) => {\n    setContacts((state) => state.filter((contact) => contact.id !== id));\n  };\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div className={styles.App}>\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} onSubmitFunction={onFormSubmit} />\n      <h2>contacts</h2>\n      <h3>Find contacts by name</h3>\n      <Filter value={filter} onChange={onFilterChange} />\n      <ContactList\n        contacts={getVisibleContact()}\n        onDeleteContact={onDeleteButtonClick}\n      />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__2754c\",\"Label\":\"ContactForm_Label__2y4cB\",\"Input\":\"ContactForm_Input__2inP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__I-XeS\",\"Span\":\"ContactList_Span__1dZ-7\",\"ButtonDelete\":\"ContactList_ButtonDelete__3uQ4Q\"};"],"sourceRoot":""}